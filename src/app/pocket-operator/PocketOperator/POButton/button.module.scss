// Squishy buttons inspired by https://goo.gl/bFCyS

// color of the red indication when a button is pressed down
$red: red;
// color of the inverse color button
$white: rgb(240, 240, 230);
$size: 50px;
// opacity color of the dark shadow
$dark: 25;
// opacity color of the light shadow?
$light: 255;

.toggle {
  margin: 4px;
  display: inline-block;

  border-radius: 100%;
  position: relative;
  height: $size;
  width: $size;

  /* Shadow should look inset */
  box-shadow: 0px 0px 2px 1px rgba(0, 0, 0, 0.5),
    // outer lip
    inset 0px 0px 2px 1px rgba(0, 0, 0, 0.9),
    // inner lip
    inset 0px 0px 3px 5px rgba(0, 0, 0, 0.8),
    // inner body
    0px 1px 1px 0px rgba(255, 255, 255, 0.35),
    // shadow on buttons
  ;

  // show a bit of a glow effect around the button to shade it.
  &:before {
    $radius: $size * 0.845;
    $glow: $size * 0.125;

    position: absolute;
    left: 50%;
    top: 50%;
    height: $radius - $glow;
    width: $radius - $glow;

    border-radius: $radius;

    /* shift the button shadow just slightly to the left and top */
    margin-left: ($radius - $glow) * -0.5;
    margin-top: ($radius - $glow) * -0.5;

    // necessary to make sure this element is displayed at all
    content: "";
    opacity: 0.2;
    box-shadow: inset 0 0 $glow $glow / 2 rgba($dark, $dark, $dark, 0.25);
  }

  &:hover {
    .tooltip {
      display: block;
    }
  }
}

.tooltip {
  position: absolute;
  top: 100%;
  left: 100%;
  transform: translate(-75%, 0);
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 5px;
  border-radius: 2px;
  font-size: 12px;
  z-index: 9999;
  display: none;
  position: hidden;
  transition: all 300ms ease-out;
  box-shadow: 1px 1px 5px 0 rgba(0, 0, 0, 0.5);
}

.tooltipText {
  display: block;
  text-align: center;
  font-size: 12px;
  line-height: 100%;
  color: white;
  text-shadow: 0 0 1px rgba(0, 0, 0, 0.8);
}

// button with flipped colors
// TODO: this isn't done yet!
.flipColors {
  @extend .toggle;
  // background-color: $white;

  /* Shadow should look inset */
  box-shadow: 0px 0px 2px 1px rgba(0, 0, 0, 0.5),
    // outer lip
    inset 0px 0px 2px 1px rgba(0, 0, 0, 0.9),
    // inner lip
    inset 0px 0px 3px 5px rgba(0, 0, 0, 0.8),
    // inner body
    0px 1px 1px 0px rgba(255, 255, 255, 0.35),
    // shadow on buttons
  ;

  .button {
    background-color: $white;

    box-shadow: 0 2px 0 2px rgba(0, 0, 0, 0.5),
      0px -1px 2px -1px rgba(0, 0, 0, 255.5),
      -1px -1px 0 0 rgba(255, 255, 255, 0.8);
  }

  .label {
    color: black;
  }
}

// this is the rim around the buttons to give the button round corners.
.button {
  $radius: $size * 0.688;
  border-radius: $radius;

  display: block;
  height: $radius;
  width: $radius;

  position: absolute;
  left: 50%;
  top: 50%;

  margin-left: $radius * -0.5;
  margin-top: $radius * -0.5;

  background: transparent;

  box-shadow: 0 2px 0 2px rgba(0, 0, 0, 0.5),
    0px -1px 2px -1px rgba(255, 255, 255, 255.5),
    -1px -1px 0 0 rgba(0, 0, 0, 0.8);
  transition: all 300ms cubic-bezier(0.23, 1, 0.32, 1);
}

// the label on the button. either text or an svg.
.label {
  color: #ccd0d4;
  transition: color 300ms ease-out;

  // configure the font.
  font-weight: 700;
  font-size: 17px;
  opacity: 0.9;

  // center the text inside the label.
  position: absolute;
  text-align: center;
  line-height: 100%;
  height: 100%;
  width: 100%;

  // center any block element inside the label.
  display: flex;
  justify-content: center;
  align-items: center;

  text-shadow: 1px 1px 3px #282828, 0 0 0 rgba(0, 0, 0, 0.8), 0px 1px 1px #fff;

  >svg>* {
    box-shadow: 1px 1px 3px #282828, 0 0 0 rgba(0, 0, 0, 0.8), 0px 1px 1px #fff;
  }
}

// if the label is just text, we need to offset the position slightly
// to make the label appear centered.
.labelText {
  margin-top: -1px;
}

// the light that is visible when the button is pressed.
.light {
  position: absolute;
  width: calc(100% - 3px);
  height: calc(100% - 3px);
  top: 50%;
  left: 50%;
  border-radius: 100%;
  transform: translate(-50%, -50%) rotate(45deg);

  /* NOTE: this was using z-index -1 in the 3d mode. */

  // the light is a gradient that is visible when the button is pressed.
  opacity: 0;
  transition: opacity 50ms ease-out;
  box-shadow: inset 2px 2px 4px 3px $red;
}

// a pixel displayed to imitate an LED light.
.lightPixel {
  width: 5px;
  height: 5px;

  border-radius: 100%;
  position: absolute;
  top: 4px;
  left: 50%;

  background-color: $red;
  transform: translate(-50%, -50%);

  opacity: 0;
  transition: opacity 50ms ease-out;
}

// the hidden, user-interactive input element.
// sets a bounding box for the button and label.
.input {
  // occupies the full bounding box it's provided.
  position: absolute;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;

  // clickable, hidden, and displayed on top of everything.
  opacity: 0;
  z-index: 1;
  cursor: pointer;

  // when the input is highlighted subtly by another action, show the light.
  &.notedInput {
    ~.light {
      opacity: 0.1;
    }

    ~.lightPixel {
      opacity: 0.1;
    }
  }

  // when input is activated but not by the user, the button should appear pressed a little bit.
  &.userTriggeredHoverButton,
  &.highlightedInput {
    ~.light {
      opacity: 0.2;
    }

    ~.lightPixel {
      opacity: 0.2;
    }

  }

  /* When pressing, highlight the light completely */
  &.activeInput,
  &.userTriggeredActiveButton {
    ~.light {
      opacity: 0.3;
    }

    ~.lightPixel {
      opacity: 0.3;
    }

  }


  &.userTriggeredActiveButton {

    // shade the button and label to make them appear pressed.
    ~.button {
      box-shadow: 0 2px 1px 4px rgba(0, 0, 0, 0.6),
        0px -1px 2px 1px rgba(255, 255, 255, 0.4),
        inset -1px -2px 2px 1px rgba(0, 0, 0, 0.4),
        inset 0 0 2px 5px rgba(0, 0, 0, 0.1);
      transition: box-shadow 500ms ease-out;
    }

    ~.label {
      line-height: 48px;
      text-shadow: -1px -1px 2px rgba(255, 255, 255, 0.1),
        0 0 1px rgba(0, 0, 0, 0.8), 0px 1px 1px black;
      transition: text-shadow 200ms ease-out;
    }

    ~.tooltip {
      display: block;
    }
  }
}